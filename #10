"""
In a game of Lingo, there is a hidden word, five characters long. The object of the game is to find this word by guessing, and in
return receive two kinds of clues: 1) the characters that are fully correct, with respect to identity as well as to position, and 2) the
characters that are indeed present in the word, but which are placed in the wrong position. Write a program with which one can
play Lingo. Use square brackets to mark characters correct in the sense of 1), and ordinary parentheses to mark characters correct in
the sense of 2). Assuming, for example, that the program conceals the word "tiger", you should be able to interact with it in the
following way: >>> import lingo snakeClue: snak(e) fiest Clue: f[i](e)s(t) timesClue: [t][i]m[e]s tiger Clue: [t][i][g][e][r] 
"""


def guess_word(word_string):
    word = list(word_string)
    
    while True:
        guess = list(input('Please enter your guess of a {} characters long word: '\
            .format(len(word_string))))
        if guess == word:
            print('You guessed the right word!')
            break
        else:
            clue_lst = guess
            
            # The characters that are fully correct, 
            #   with respect to identity as well as to position. Use [] to show the character.
            for i in range(0, len(guess)):
                if i < len(word) and guess[i] == word[i]:
                    clue_lst[i] = "[" + guess[i] + "]" 
                    continue
            
                # The characters that are indeed present in the word, 
                #   but which are placed in the wrong position. Use () to show the character.
                for j in range(0, len(word)):
                    if guess[i] == word[j]:
                        clue_lst[i] = "(" + guess[i] + ")"
          
            clue = "".join(clue_lst)
            print('Clue: ' + clue)

guess_word('tiger')
